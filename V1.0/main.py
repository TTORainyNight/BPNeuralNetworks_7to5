import numpy as np
from Models import DClassifier

#这是一个调用实例，展示了如何使用DClassifier进行神经网络的训练、检测、调用

#准备数据：X为训练集，注意参数类型
X = np.array([[10,20,23,50,49,47,55,0],
              [21,32,40,56,55,49,62,0],
              [18,24,29,55,48,60,55,0],
              [13,23,19,58,59,57,49,0],
              [53,58,60,55,12,23,24,1],
              [59,60,58,56,34,23,33,1],
              [53,58,60,55,12,23,24,1],
              [49,48,58,53,41,33,39,1],
              [61,73,66,63,92,86,87,2],
              [71,60,62,66,89,79,80,2],
              [64,66,74,61,93,90,86,2],
              [67,65,63,60,91,87,87,2],
              [91,95,82,90,65,64,66,3],
              [90,91,88,91,71,68,70,3],
              [89,86,91,79,69,65,66,3],
              [91,95,88,86,70,64,74,3],
              [96,97,97,96,95,96,97,4],
              [94,95,98,99,98,95,99,4],
              [96,97,95,96,94,98,97,4],
              [98,96,99,98,97,96,92,4]])

#准备数据：C为检测集，注意参数类型
C = np.array([[10,20,23,50,49,47,55,0],
              [53,58,60,55,12,23,24,1],
              [61,73,66,63,92,86,87,2],
              [91,95,82,90,65,64,66,3],
              [98,96,99,98,97,96,92,4]])

#准备数据：goal为预测数据，注意参数类型
goal = np.array([98,96,99,98,97,96,92])

#这里进行模型训练，设置模型参数，依次是---训练集、检测集、操作类型、保存路径
p1 = DClassifier(X,C,'train',"B:\\temp\\")
#设置完毕后，调用Run()方法，进行训练
p1.Run()

#这里进行模型使用，设置模型参数，依次是---预测数据、0（无意义参数，需要置0或null）、操作类型、模型读取路径
p1 = DClassifier(goal,0,'check',"B:\\temp\\")
#设置完毕后，调用Run()方法，进行预测
p1.Run()
#预测完毕的结果调用，你可以用作其它用途
print(p1.Results)